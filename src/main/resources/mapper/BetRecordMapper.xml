<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zed.base_demo.dao.BetRecordMapper">
  <resultMap id="BaseResultMap" type="com.zed.base_demo.entity.BetRecord">
    <result column="ID" jdbcType="VARCHAR" property="id" />
    <result column="BET_RECORD_CODE" jdbcType="VARCHAR" property="betRecordCode" />
    <result column="TENANT_CODE" jdbcType="VARCHAR" property="tenantCode" />
    <result column="ROOM_ID" jdbcType="VARCHAR" property="roomId" />
    <result column="CREATED_BY" jdbcType="VARCHAR" property="createdBy" />
    <result column="CREATED_DATE" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="LAST_MODIFIED_BY" jdbcType="VARCHAR" property="lastModifiedBy" />
    <result column="LAST_MODIFIED_DATE" jdbcType="TIMESTAMP" property="lastModifiedDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zed.base_demo.entity.BetRecord">
    <result column="ACCOUNTS" jdbcType="LONGVARCHAR" property="accounts" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, BET_RECORD_CODE, TENANT_CODE, ROOM_ID, CREATED_BY, CREATED_DATE, LAST_MODIFIED_BY, 
    LAST_MODIFIED_DATE
  </sql>
  <sql id="Blob_Column_List">
    ACCOUNTS
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zed.base_demo.entity.BetRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bet_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zed.base_demo.entity.BetRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bet_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zed.base_demo.entity.BetRecordExample">
    delete from bet_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zed.base_demo.entity.BetRecord">
    insert into bet_record (ID, BET_RECORD_CODE, TENANT_CODE, 
      ROOM_ID, CREATED_BY, CREATED_DATE, 
      LAST_MODIFIED_BY, LAST_MODIFIED_DATE, ACCOUNTS
      )
    values (#{id,jdbcType=VARCHAR}, #{betRecordCode,jdbcType=VARCHAR}, #{tenantCode,jdbcType=VARCHAR}, 
      #{roomId,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{lastModifiedBy,jdbcType=VARCHAR}, #{lastModifiedDate,jdbcType=TIMESTAMP}, #{accounts,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zed.base_demo.entity.BetRecord">
    insert into bet_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="betRecordCode != null">
        BET_RECORD_CODE,
      </if>
      <if test="tenantCode != null">
        TENANT_CODE,
      </if>
      <if test="roomId != null">
        ROOM_ID,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="createdDate != null">
        CREATED_DATE,
      </if>
      <if test="lastModifiedBy != null">
        LAST_MODIFIED_BY,
      </if>
      <if test="lastModifiedDate != null">
        LAST_MODIFIED_DATE,
      </if>
      <if test="accounts != null">
        ACCOUNTS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="betRecordCode != null">
        #{betRecordCode,jdbcType=VARCHAR},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedBy != null">
        #{lastModifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastModifiedDate != null">
        #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="accounts != null">
        #{accounts,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zed.base_demo.entity.BetRecordExample" resultType="java.lang.Long">
    select count(*) from bet_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bet_record
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.betRecordCode != null">
        BET_RECORD_CODE = #{record.betRecordCode,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantCode != null">
        TENANT_CODE = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.roomId != null">
        ROOM_ID = #{record.roomId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDate != null">
        CREATED_DATE = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifiedBy != null">
        LAST_MODIFIED_BY = #{record.lastModifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModifiedDate != null">
        LAST_MODIFIED_DATE = #{record.lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accounts != null">
        ACCOUNTS = #{record.accounts,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update bet_record
    set ID = #{record.id,jdbcType=VARCHAR},
      BET_RECORD_CODE = #{record.betRecordCode,jdbcType=VARCHAR},
      TENANT_CODE = #{record.tenantCode,jdbcType=VARCHAR},
      ROOM_ID = #{record.roomId,jdbcType=VARCHAR},
      CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
      CREATED_DATE = #{record.createdDate,jdbcType=TIMESTAMP},
      LAST_MODIFIED_BY = #{record.lastModifiedBy,jdbcType=VARCHAR},
      LAST_MODIFIED_DATE = #{record.lastModifiedDate,jdbcType=TIMESTAMP},
      ACCOUNTS = #{record.accounts,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bet_record
    set ID = #{record.id,jdbcType=VARCHAR},
      BET_RECORD_CODE = #{record.betRecordCode,jdbcType=VARCHAR},
      TENANT_CODE = #{record.tenantCode,jdbcType=VARCHAR},
      ROOM_ID = #{record.roomId,jdbcType=VARCHAR},
      CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
      CREATED_DATE = #{record.createdDate,jdbcType=TIMESTAMP},
      LAST_MODIFIED_BY = #{record.lastModifiedBy,jdbcType=VARCHAR},
      LAST_MODIFIED_DATE = #{record.lastModifiedDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>