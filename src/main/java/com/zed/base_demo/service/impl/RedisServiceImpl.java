package com.zed.base_demo.service.impl;import com.zed.base_demo.service.RedisService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.redis.core.RedisTemplate;import org.springframework.stereotype.Service;import java.util.Map;/** * 实现类 * @author:Zed * @date: 2019/5/9 */@Servicepublic class RedisServiceImpl implements RedisService {@Autowired    private RedisTemplate redisTemplate;    @Override    public void makeIpaddress() {//        if (ipaddressService == null) {//            ipaddressService = SpringBeanFactoryUtils.getBean(IpaddressService.class);//        }//        Map<String, Object> ipaddressMap = new HashMap<>();//        List<Ipaddress> ipaddressList = ipaddressService.findAll();//        ipaddressList.forEach(ipaddress -> {//            ipaddressMap.put(ipaddress.getAddress(), ipaddress);//        });//        remove(ChatConstant.PROJECT_IPADDRESS);//        addMap(ChatConstant.PROJECT_IPADDRESS, ipaddressMap);    }//    public void addMap(String key, Map<String, Object> map) {//        redisTemplate.boundHashOps(key).putAll(map);//    }//    @Override//    public void remove(String key) {//        if (exists(key)) {//            redisTemplate.delete(key);//        }//    }//    @Override//    public boolean exists(String key) {//        return redisTemplate.hasKey(key);//    }}