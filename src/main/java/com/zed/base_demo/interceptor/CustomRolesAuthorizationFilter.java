package com.zed.base_demo.interceptor;import org.apache.shiro.subject.Subject;import org.apache.shiro.web.filter.authz.RolesAuthorizationFilter;import org.springframework.stereotype.Component;import javax.servlet.ServletRequest;import javax.servlet.ServletResponse;import java.io.IOException;/** * 自定义角色过滤器 * * @author:Zed * @date: 2019/5/9 */@Componentpublic class CustomRolesAuthorizationFilter extends RolesAuthorizationFilter {    @Override    public boolean isAccessAllowed(ServletRequest request, ServletResponse response, Object mappedValue) throws IOException {        Subject subject = getSubject(request, response);        String[] rolesArray = (String[]) mappedValue;        // 如果没有角色限制，直接放行        if (rolesArray == null || rolesArray.length == 0) {            return true;        }        // 判断是否有角色权限        for (int idx = 0; idx < rolesArray.length; idx++) {            if (subject.hasRole(rolesArray[idx])) {                return true;            }        }        return false;    }}