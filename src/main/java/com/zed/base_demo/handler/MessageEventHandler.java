package com.zed.base_demo.handler;import com.corundumstudio.socketio.AckRequest;import com.corundumstudio.socketio.SocketIOClient;import com.corundumstudio.socketio.SocketIOServer;import com.corundumstudio.socketio.annotation.OnConnect;import com.corundumstudio.socketio.annotation.OnDisconnect;import com.corundumstudio.socketio.annotation.OnEvent;import com.zed.base_demo.service.RedisService;import com.zed.base_demo.vo.MessageInfo;import lombok.extern.slf4j.Slf4j;import org.springframework.boot.CommandLineRunner;import org.springframework.stereotype.Component;import javax.annotation.Resource;/** * @author:Zed * @date: 2019/5/9 */@Slf4j@Componentpublic class MessageEventHandler implements CommandLineRunner {    @Resource    private RedisService redisService;    @Resource    private SocketIOServer socketIOServer;    @OnConnect    public void onConnect(SocketIOClient client) {        System.out.println("客户端:" + client.getSessionId() + "已连接");    }    @OnDisconnect    public void onDisconnect(SocketIOClient client) {        System.out.println("客户端:" + client.getSessionId() + "断开连接");    }    @OnEvent(value = "messageevent")    public void onEvent(SocketIOClient client, AckRequest request, MessageInfo data) {        System.out.println("发来消息：" + data.getMsgContent());        socketIOServer.getClient(client.getSessionId()).sendEvent("messageevent", "back data");    }    @Override    public void run(String... args) throws Exception {        socketIOServer.start();        //启动刷新redis中 等待客户及聊天room        redisService.makeIpaddress();          //缓存IP信息    }}